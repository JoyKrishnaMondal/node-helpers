// Generated by LiveScript 1.4.0
(function(){
  var lo, colors, red, DefaultFn;
  lo = require("lodash");
  colors = require("colors/safe");
  red = colors.red;
  DefaultFn = function(UserInput, DefaultType){
    var Keys, i$, len$, I, ref$, type, value, E;
    Keys = lo.keys(DefaultType);
    for (i$ = 0, len$ = Keys.length; i$ < len$; ++i$) {
      I = Keys[i$];
      ref$ = DefaultType[I], type = ref$.type, value = ref$.value;
      switch (type(UserInput[I])) {
      case true:
        break;
      case false:
        if (value === undefined) {
          UserInput[I] = "< ? ? >";
          try {
            throw red(("Error: '" + I + "' key-value is not defined in :\n") + JSON.stringify(UserInput, null, "\t"));
          } catch (e$) {
            E = e$;
            console.log(E);
            UserInput[I] = undefined;
          }
        } else {
          UserInput[I] = value;
        }
        break;
      default:
        throw red("Error: Default type for " + I + " is not defined.");
      }
      if (!DefaultType[I].type(UserInput[I])) {
        UserInput[I] = DefaultType[I].value;
      }
    }
    return UserInput;
  };
  module.exports = DefaultFn;
}).call(this);
