// Generated by LiveScript 1.4.0
(function(){
  var ShowList, ForList, CopyDefaults, isObject, isArray;
  ShowList = function(List){
    return console.log(JSON.stringify(List, null, "\t"));
  };
  ForList = function(Default, UserSpecific, type){
    var Combined;
    type == null && (type = "merge-right");
    switch (type) {
    case "merge-left":
      Combined = Default.concat(UserSpecific);
      break;
    case "merge-right":
      Combined = UserSpecific.concat(Default);
    }
    return Combined;
  };
  CopyDefaults = function(Default, UserSpecific, type){
    var Keys, i$, len$, I;
    type == null && (type = "merge-right");
    Keys = Object.keys(Default);
    for (i$ = 0, len$ = Keys.length; i$ < len$; ++i$) {
      I = Keys[i$];
      if (UserSpecific[I] === undefined || UserSpecific[I] === null) {
        if (typeof Default[I] === "object") {
          if (Array.isArray(Default[I])) {
            UserSpecific[I] = [];
            UserSpecific[I] = ForList(Default[I], UserSpecific[I], type);
          } else {
            if (!(Default[I] === null)) {
              UserSpecific[I] = {};
              CopyDefaults(Default[I], UserSpecific[I]);
            }
          }
        } else {
          UserSpecific[I] = Default[I];
        }
      } else {
        if (typeof Default[I] === "object") {
          if (Array.isArray(Default[I])) {
            UserSpecific[I] = ForList(Default[I], UserSpecific[I], type);
          } else {
            if (!(Default[I] === null)) {
              CopyDefaults(Default[I], UserSpecific[I]);
            }
          }
        }
      }
    }
    return UserSpecific;
  };
  isObject = function(x){
    if (typeof x === "object" && !Array.isArray(x)) {
      return true;
    } else {
      return false;
    }
  };
  isArray = function(x){
    if (typeof x === "object" && Array.isArray(x)) {
      return true;
    } else {
      return false;
    }
  };
  module.exports = {
    ShowList: ShowList,
    CopyDefaults: CopyDefaults,
    isArray: isArray,
    isObject: isObject,
    minDefault: require("./mindefault.js")
  };
}).call(this);
